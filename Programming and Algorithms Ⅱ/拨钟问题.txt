1、首先，此问题是一个可穷举的问题
2、其次，此问题是一个方程组问题，
	对于样本：
	int cases[L][N] = 
	//X1 X2 X3 X4 X5 X6 X7 X8 X9
A1	{{1, 1, 0, 1, 1, 0, 0, 0, 0}
A2  ,{1, 1, 1, 0, 0, 0, 0, 0, 0}
A3  ,{0, 1, 1, 0, 1, 1, 0, 0, 0}
A4  ,{1, 0, 0, 1, 0, 0, 1, 0, 0}
A5  ,{0, 1, 0, 1, 1, 1, 0, 1, 0}
A6  ,{0, 0, 1, 0, 0, 1, 0, 0, 1}
A7  ,{0, 0, 0, 1, 1, 0, 1, 1, 0}
A8  ,{0, 0, 0, 0, 0, 0, 1, 1, 1}
A9  ,{0, 0, 0, 0, 1, 1, 0, 1, 1}};

即求方程 A1*X1+A2*X2+A3*X3……=
	的解 A1 A2 A3 A4 A5 A6 A7 A8 A9

3、最后，这个问题同样可以找到局部（类似递归），用类似熄灯问题的方法求解，下面描述这个局部：
a）这是一个循环为4的按钮，即：按4下等于没按。即有方程：按键数 = (按键数)%4；
b）先对移动方法1，2，3进行枚举，可以得到灯A，B，C的状态，一共4^3=64种情况。
c）在1，2，3确定的情况下，则有：4唯一决定A，5唯一决定B，6唯一决定C，即可确定4，5，6的移动数；
d）同理，在1，2，3，4，5，6，确定的基础上：7唯一决定D，9唯一决定F，即可确定7，9的移动数；
e）此时，A，B，C，D，F，都到达了12点，无法改变。而E,G,H,I还没确定，只剩下移动8能够改变GHI，所以只要检查E是否已经
到达12点以及，GHI的时钟数是否相等就行了。

